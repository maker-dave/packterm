Packet Radio Terminal Project: AI Service Manual
Version: Based on server.py v2.01 and terminal_client.py v3.00, tested 2025-03-09, updated 2025-03-14
Purpose: Comprehensive training data for Grok 3 successor to understand, troubleshoot, and extend server.py and terminal_client.py. Includes all critical details—code refs, logs, bug fixes, user prefs, and future steps—raw and unfiltered for AI processing.

---

System Overview
Objective: Navigable terminal UI over 2m AX.25 at 1200 baud replacing teletype. Sync forms (~1920 bytes) at startup, send minimal data (~50 bytes) at 120 chars/sec. Standalone resilience during comms loss.
Components:
- server.py v2.01: Forms mgmt, CSV storage, TCP broadcast (future AX.25). Runs on Raspberry Pi 4 (pi4.lan), Direwolf, DigiRig Mobile, HTX-242. Path: /home/aprs/terminal/.
- terminal_client.py v3.00: Curses UI, syncs with server, submits data. Runs on Panasonic CF-29 Mk3 (debian.lan), same stack. Path: /opt/terminal_client/.
- client_install.sh: Sets up client dirs (/opt/terminal_client/, /opt/terminal_client/forms/), perms, deps (Python, curses).

File Formats
Forms (TXT):
- Server: /home/aprs/terminal/forms/<form_id>.txt
- Client: /opt/terminal_client/forms/<form_id>.txt
- Format: desc:<description>\n<fid>,<label>,<row>,<col>,<length>\n
- Example (MD01.txt): desc:Medical Info\n01,Name,3,12,256\n02,Injury,4,12,256\n03,Severity,5,12,256\n04,Treatment,6,12,256\n05,Time,7,12,256
Submissions (CSV):
- Path: /home/aprs/terminal/server_data/<form_id>_submissions.csv
- Format: <timestamp>,<callsign>,<payload>
- Example: 1741404491,KC8QKU,01John|02Sprain|03Moderate|04Bandage|0512:00
Index: <form_id>:<md5>|... from build_forms_index() (terminal_client.py Chunk 3, ~L370).

Sync Protocol
Server Broadcast:
- Packet: MD5|<callsign>|NONE|<md5>\n (server.py Chunk 4, ~L510)
- Interval: 60s (BROADCAST_INTERVAL, server.py Chunk 1, ~L40)
- Func: broadcast_forms_md5() hashes /home/aprs/terminal/forms/*.txt in binary (Chunk 4, ~L480)
Client Check:
- Func: server_listener() (Chunk 6, ~L780) compares server MD5 to local hash_forms_dir() (Chunk 3, ~L350)
- Mismatch: Sends UPDATE|<callsign>|NONE|<index>\n (Chunk 6, ~L830), index from build_forms_index() (Chunk 3, ~L370)
Server Response:
- Packet: FORM_UPDATE|<callsign>|<fname>|<content ~ instead of \n>\n (Chunk 5, ~L670)
- Packet: FORM_DELETE|<callsign>|<fname>|\n (Chunk 5, ~L690, v2.00+)
- Logic: handle_client() diffs client_forms vs server_forms (Chunk 5, ~L650)
Client Write:
- server_listener() (Chunk 6, ~L850) saves FORM_UPDATE to /opt/terminal_client/forms/<fname>.txt, ~ to \n
- server_listener() (Chunk 6, ~L870) deletes FORM_DELETE fname from /opt/terminal_client/forms/ (v3.00)

Data Flow
Submission:
- Client: send_to_server() (Chunk 6, ~L570) packs INSERT|<callsign>|<form_id>|<payload>\n or SEARCH|<callsign>|<form_id>|<payload>\n, splits at PACLEN=128 with seq:total (e.g., 1:2|) if >128 bytes
- Server: handle_client() (Chunk 5, ~L590) saves INSERT to CSV, sends ACK|<callsign>|<form_id>|SUCCESS\n; SEARCH returns SEARCH_RESULT|<callsign>|<form_id>|<matches ~>\n
Retrieval: Planned REQ_DATA:—not implemented.

Radio Comms Setup (Proposed)
Hardware:
- Server: Pi 4, Direwolf, DigiRig, HTX-242 (2m, 5W–45W). Portable (backpack, power bank) or stationary. Antenna: Whip (low power) or folding dipole (high power, tree).
- Client: CF-29 Mk3, same stack. Mobile/fixed. Antenna: Whip or external.
Software:
- AX.25: Direwolf 1200 baud AFSK/FM, ax25d routing.
- Protocol: TCP (pi4.lan:12345) -> AX.25 datagrams.
- Config: direwolf.conf—callsigns (KC8QKU-1 server, KB8XYZ-1 client), beacon 10m, digipeat off.
Operation:
- Freq: 2m (144-148 MHz), avoid APRS (e.g., 144.390 MHz)—deployment-specific.
- Mode: Simplex, 1200 baud, 1-2 packets/sec.
- Resilience: Server MD5 every 60s; client retries 10s (MAX_RETRIES=5, Chunk 1, ~L30).

Troubleshooting Directives
Connection Fails:
- Symptoms: Client "Connection refused" -> "Software caused connection abort" (skippys_messups.log, e.g., 22:12:29–22:27:46)
- Check:
  Server: /home/aprs/terminal/server.log "Server running" (e.g., 18:40:43)
  Client: /opt/terminal_client/skippys_messups.log "TCP connected" (e.g., 18:40:57)
- Fix:
  Start server (python3 /home/aprs/terminal/server.py on pi4.lan).
  Ping pi4.lan from debian.lan.
  AX.25: Check /tmp/direwolf.log for TX/RX.
MD5 Sync Stalls:
- Symptoms: Server MD5 (e.g., 8241bea...) persists post-deletion (e.g., LG01 at 18:30:53, logs 18:31:24–18:35:24)
- Status: Fixed in v2.01
- Check: Server MD5 updates (e.g., 5cb81d96... at 18:41:43) post-delete
- Fix: broadcast_forms_md5() (Chunk 4, ~L510) forces forms_md5 = update_forms_index() every 60s, skips check_forms_changed()
Double Send Bug:
- Symptoms: Client duplicate "Sending data:" (e.g., 08:41:10)
- Status: Fixed in v2.90
- Check: Single "TCP sent segment" per submit (e.g., 18:41:43)
- Fix: main() (Chunk 7, ~L900) uses sending flag: if char == 10 and current_field == 'submit' and not sending:
Post-ACK Timeout:
- Symptoms: "Send error: timed out" post-"ACK" (e.g., 08:41:15)
- Status: Fixed in v2.90
- Check: No "Send failed" after "ACK" (e.g., 18:41:43)
- Fix: send_to_server() (Chunk 6, ~L670) resets sending = False
UI Stays on Form:
- Symptoms: Form persists post-submit/Esc (e.g., 08:41:15)
- Status: Fixed in v2.90, enhanced v2.96
- Check: UI resets to form list (e.g., 18:41:43 post-LG01 delete)
- Fix: server_listener() (Chunk 6, ~L880) calls display_form_list() after FORM_DELETE
Esc Doesn’t Exit:
- Status: Fixed in v2.90
- Check: Esc resets UI unless sending (e.g., 18:41:43)
- Fix: main() (Chunk 7, ~L870) if char == 27 and form_fields: ... display_form_list(stdscr)
Syntax Error (Server):
- Symptoms: "SyntaxError: f-string ... backslash" (Chunk 5, ~L286)
- Status: Fixed in v1.95
- Check: Server runs on Python 3.5 (pi4.lan, 18:40:43)
- Fix: handle_client() (Chunk 5, ~L620) uses ends_with_newline = data.endswith('\n')
StopIteration Crash (Client):
- Symptoms: Crash in send_to_server() during sync, empty form_fields
- Status: Fixed in v2.95
- Check: No StopIteration (18:41:43 sync)
- Fix: send_to_server() (Chunk 6, ~L590) form_id = form_fields[next(iter(form_fields))]['form_id'] if form_fields else 'NONE'
FORM_DELETE Noise:
- Symptoms: Server sends FORM_DELETE|1|, |2| with |LG01| (18:41:43.689–18:41:43.698)
- Status: Known, not fixed (user preference)
- Check: Client ignores |1|, |2|, deletes LG01.txt (18:41:43)
- Cause: handle_client() (Chunk 5, ~L680) misparses UPDATE 1:2|... as form names
- Proposed Fix: Add regex if ':' in pair and not re.match(r'\d+:\d+', pair): (Chunk 5, ~L650)—safe, unapplied

History
- v1.78 (Server): INDEX: parsing, FORMS: diffs (2025-03-07)
- v2.84 (Client): Fixed \n\n buffering, UI tweaks
- v1.88 (Server): Simplified handle_client(), added submission logs (2025-03-08)
- v2.89 (Client): Fixed server_listener syntax, streamlined send_to_server() (2025-03-07)
- v1.89 (Server): Added paclen, socket/UI logs, moved init_colors (2025-03-08)
- v2.90 (Client): Fixed double sends, timeouts, UI stickiness; added paclen/logs (2025-03-08)
- v1.90–1.93 (Server): Search, unified packet format, sync logs (2025-03-08)
- v2.94 (Client): Unified packet format, sync logs (2025-03-09)
- v1.94 (Server): FORM_UPDATE ~ delimiter, packet_integrity logs (2025-03-09)
- v2.95 (Client): Fixed StopIteration, sync logs (2025-03-09)
- v1.95 (Server): Fixed f-string syntax, form_edit_screen (2025-03-09)
- v2.96 (Client): Packet_integrity logs, UI refresh post-sync (2025-03-09)
- v1.97 (Server): Full f-string fixes for Python 3.5 (2025-03-09)
- v2.00 (Server): Added FORM_DELETE in handle_client (2025-03-09)
- v2.98 (Client): UI tweaks in redraw_screen(), reduced listener log noise (2025-03-11)
- v3.00 (Client): Added FORM_DELETE handling in server_listener (2025-03-14)
- v2.01 (Server): Forced MD5 recalc in broadcast_forms_md5() (2025-03-14)
- Issues Fixed:
  v2.84: Blank lines truncated
  v1.88: Regex parsing dropped
  v2.90: Double sends, timeouts, UI stickiness (08:41:10–15)
  v1.95: f-string SyntaxError (Chunk 5, ~L286)
  v2.95: StopIteration in send_to_server
  v2.01: MD5 sync stall post-deletion (18:30:53–18:35:24)

Current State (2025-03-14)
- Success:
  Submissions: CSV updates (e.g., 1741404491,KC8QKU,...)
  Sync: MD5 updates post-delete (e.g., 5cb81d96... at 18:41:43)
  UI: Resets post-submit/Esc/sync (e.g., 18:41:43)
  Server: Python 3.5 compatible (v1.97+, 18:40:43)
  FORM_DELETE: Client removes forms (e.g., LG01.txt gone, 18:41:43)
- Bugs:
  FORM_DELETE|1|, |2| sent with |LG01| (18:41:43)—messy, harmless, user opts to ignore
  No critical issues (logs 18:40:43–18:41:44)
- Resilience:
  Client: Retries 10s (MAX_RETRIES=5, Chunk 1, ~L30), survives delays (e.g., 22:27:48)
  Server: Queues MD5 every 60s, catches deletions (v2.01, Chunk 4, ~L510)
- Pending:
  TCP -> AX.25
  REQ_DATA:
  people.csv sync (MD5_people:)
  CSV padding
- Logs (2025-03-09):
  Server: /home/aprs/terminal/server.log (18:40:43–18:41:43, LG01 delete sync)
  Client: /opt/terminal_client/skippys_messups.log (18:40:57–18:41:44, FORM_DELETE success)
  GrabLogs: 18:35:49–18:42:18 (server.log 16376 bytes, skippys_messups.log 10798 bytes)

Debugging Suggestions
- Logs:
  Server: Enable log_packet_integrity/log_sync_state/log_form_deletion (Chunk 1, ~L120)
  Client: Keep log_packet_integrity/log_sync_packets/log_ui_transitions/log_form_deletion (Chunk 1, ~L140)
- Test Cases:
  1. Client start, server delay 5m—verify retry (skippys_messups.log, "TCP connected")
  2. Kill server mid-submit—check queue (Chunk 6, ~L650)
  3. Submit MD01 256-char fields—test CSV (server.py Chunk 5, ~L610)
  4. Sync empty client forms—no StopIteration (Chunk 6, ~L590)
  5. Server on Python 3.5—no SyntaxError (Chunk 5, ~L620)
  6. Delete IN01—verify FORM_DELETE|IN01| only (server.log, skippys_messups.log)
- AX.25 Prep:
  Replace socket with ax25d: server.py Chunk 4 ~L520, terminal_client.py Chunk 6 ~L580
  Simulate loss: Drop 1/3 MD5 broadcasts, check UPDATE retries (Chunk 6, ~L830)
  Tune PACLEN (Chunk 1, ~L30): Test 64 vs. 256
- Retrain Focus:
  server.py: Chunk 4 (broadcast_forms_md5, v2.01 fix), Chunk 5 (handle_client, FORM_DELETE noise)
  terminal_client.py: Chunk 6 (server_listener, FORM_DELETE), Chunk 7 (main, UI reset)
  Logs: server.log (18:40:43–18:41:43), skippys_messups.log (18:40:57–18:41:44)
  Key Fixes: v2.01 MD5 recalc (Chunk 4, ~L510), v3.00 FORM_DELETE (Chunk 6, ~L870)

Design Principles
- Low Bandwidth: Sync forms once (~1920 bytes), data ~50 bytes
- Resilience: Queue submits, retry syncs—solo during outages
- Simplicity: TXT forms, CSV storage—no DB
- Scalability: Broadcasts for 12+ clients (tested 1, 192.168.86.49)

User Notes (2025-03-09)
- Prefers reliable over tidy: FORM_DELETE|1|, |2| ignored as "messy but works"
- Workshop style: Slow, steady, functional—v2.01 fix kept simple
- Next Steps: AX.25 transition, no rush on cosmetic fixes